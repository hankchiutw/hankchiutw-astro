---
import MainLayout from '../layouts/MainLayout.astro';
import { getProjects } from '../lib/strapi';
import type { StrapiProject } from '../lib/strapi.types';

// Fetch projects data at build time
const projects = await getProjects();

// Fallback projects if Strapi data is not available
const fallbackProjects: StrapiProject[] = [
  {
    id: 1,
    attributes: {
      title: 'Personal Website',
      description: 'A website built with Astro featuring fast page loads and minimal JavaScript.',
      projectUrl: 'https://github.com/hankchiutw/hankchiutw-astro',
      technologies: {
        data: [
          { id: 1, attributes: { name: 'Astro' } },
          { id: 2, attributes: { name: 'TypeScript' } },
          { id: 3, attributes: { name: 'CSS' } },
        ],
      },
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString(),
    },
  },
  {
    id: 4,
    attributes: {
      title: 'Copy as Link',
      description:
        "A simple Chrome extension that copies the selected text as a link to the current page's URL.",
      projectUrl: 'https://copy-as-link.vercel.app/',
      technologies: {
        data: [
          { id: 10, attributes: { name: 'Chrome Extension' } },
          { id: 11, attributes: { name: 'JavaScript' } },
        ],
      },
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString(),
    },
  },
  {
    id: 5,
    attributes: {
      title: 'Subjectize',
      description: 'TypeScript decorators for binding RxJS Subject with class properties.',
      projectUrl: 'https://www.npmjs.com/package/subjectize',
      technologies: {
        data: [
          { id: 12, attributes: { name: 'TypeScript' } },
          { id: 13, attributes: { name: 'RxJS' } },
        ],
      },
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString(),
    },
  },
];

// Use Strapi data if available, otherwise use fallback
const displayProjects = projects.length > 0 ? projects : fallbackProjects;
---

<MainLayout title="My Projects">
  <section class="projects-section">
    <h1>My Projects</h1>
    <p class="section-intro">
      Here are some personal projects I've worked on outside of my professional roles.
    </p>

    <div class="projects-grid">
      {
        displayProjects.map((project) => (
          <div class="project-card">
            <h2 class="project-title">{project.attributes.title}</h2>
            <p class="project-description">{project.attributes.description}</p>
            <div class="tech-stack">
              {project.attributes.technologies.data.map((tech) => (
                <span class="tech-tag">
                  <i class="fas fa-code" /> {tech.attributes.name}
                </span>
              ))}
            </div>
            <a href={project.attributes.projectUrl} class="project-link">
              <i class="fas fa-eye" /> View Project
            </a>
          </div>
        ))
      }
    </div>
  </section>
</MainLayout>

<style>
  .projects-section {
    padding: 2rem 0;
    max-width: var(--container-max);
    margin: 0 auto;
  }

  .section-intro {
    margin-bottom: 2rem;
    color: var(--text-color-light);
    font-size: clamp(1rem, 3vw, 1.1rem);
    line-height: 1.6;
  }

  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
  }

  .project-card {
    background-color: var(--card-bg);
    border-radius: var(--radius-md);
    padding: 1.5rem;
    box-shadow: 0 4px 10px var(--shadow-color);
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
    border: 1px solid var(--border-color);
    display: flex;
    flex-direction: column;
  }

  .project-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px var(--shadow-color);
  }

  .project-title {
    margin-top: 0;
    color: var(--primary-color);
    font-size: clamp(1.2rem, 3vw, 1.5rem);
    display: flex;
    align-items: center;
    gap: 0.5rem;
    line-height: 1.3;
  }

  .project-description {
    margin-bottom: 1.5rem;
    flex-grow: 1;
    font-size: clamp(0.9rem, 2vw, 1rem);
    line-height: 1.6;
  }

  .tech-stack {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1.5rem;
  }

  .tech-tag {
    background-color: rgba(var(--primary-color-rgb), 0.1);
    color: var(--text-color);
    padding: 0.3rem 0.6rem;
    border-radius: var(--radius-sm);
    font-size: 0.85rem;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 0.3rem;
  }

  .tech-tag i {
    font-size: 0.75rem;
    color: var(--primary-color);
  }

  .project-link {
    display: inline-flex;
    align-items: center;
    gap: 0.4rem;
    background-color: var(--primary-color);
    color: white;
    padding: 0.6rem 1.2rem;
    border-radius: var(--radius-sm);
    text-decoration: none;
    font-weight: 500;
    text-align: center;
    transition: all 0.3s ease;
    align-self: flex-start;
  }

  .project-link:hover {
    background-color: var(--primary-color-dark);
  }

  /* Responsive adjustments */
  @media (max-width: 1024px) {
    .projects-grid {
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
      gap: 1.5rem;
    }
  }

  @media (max-width: 768px) {
    .projects-section {
      padding: 1rem 1rem 2rem;
    }

    .projects-grid {
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 1.2rem;
    }

    .project-card {
      padding: 1.2rem;
    }
  }

  @media (max-width: 640px) {
    .projects-grid {
      grid-template-columns: 1fr;
    }

    .project-card {
      max-width: 500px;
    }
  }

  @media (max-width: 480px) {
    .projects-section {
      padding: 0.5rem 0.5rem 1.5rem;
    }

    .section-intro {
      margin-bottom: 1.5rem;
    }

    .project-card {
      padding: 1rem;
    }

    .tech-stack {
      margin-bottom: 1.2rem;
    }

    .project-link {
      width: 100%;
      justify-content: center;
    }
  }
</style>
